/L12"VHDL" Line Comment = -- Nocase String Chars = " File Extensions = VHD VHO VHDL
/Delimiters = ; (	)'<>=:+/-*|&,
/Indent Strings = "entity" "architecture" "component" "begin" "(" "if" "case" "elsif" "else" "when"
/Unindent Strings = "end" "else" "elsif"
/Open Fold Strings = "(" "process" "component" "entity" "architecture"
/Close Fold Strings = ")" "end process" "end component" "end entity" "end architecture"
/Function String = "%[ ^t]++^(*: process^)"
/Function String 1 = "%[ ^t]++^(entity *^) is"
/Function String 2 = "%[ ^t]++^(architecture *^) of"
/Function String 3 = "%[ ^t]++^([a-zA-Z_0-9^t]+:[ a-zA-Z_0-9^t]+^)*%*map"
/Function String 4 = "%[ ^t]++^(---[a-zA-Z_0-9^t*#=+^- ]+^)"
	
/C1"VHDL reserved words"
abs access after alias all and architecture array assert attribute
begin block body buffer bus
case component configuration constant
disconnect downto
else elsif end entity exit
file for function
generate generic group guarded
if impure in inertial inout is
label library linkage literal loop
map mod 
nand new next nor not null
of on open or others out
package port postponed procedure process pure
range record register reject rem report return rol ror
select severity signal shared sla sll sra srl subtype
then to transport type 
unaffected untis until use
variable
wait when while with 
xnor xor

/C2"VHDL attributes"
active ascending ascending 
base 
delayed driving driving_value
event 
falling_edge
high 
image instance_name 
last_active last_event last_value left leftof length low 
path_name pos pred 
quiet 
reverse_range right rightof rising_edge
simple_name stable succ 
transaction 
val value

/C3"VHDL types"
bit bit_vector boolean 
character
integer
line
natural
positive
real
signed std_logic std_logic_vector string
text time
unsigned

/C4"VHDL Procedures"
endfile
file_close file_open
read readline
write writeline