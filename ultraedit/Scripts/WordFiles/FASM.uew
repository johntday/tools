/L12"Flat Assembler" FASM_LANG Line Comment = ; String Chars = '" File Extensions = ASM ASH INC MAC
/Delimiters = +-/*=<>()[]{} :   ,|&~#`
/C1"Instructions"
aaa aad aam aas adc add addps addss and andnps andps arpl
bound bsf bsr bswap bt btc btr bts
call cbw cdq clc cld cli clts cmc cmov cmova cmovae cmovb cmovbe cmovc cmove cmovg cmovge cmovl cmovle cmovna cmovnae cmovnb cmovnbe cmovnc cmovne cmovng cmovnge cmovnl cmovnle cmovno cmovnp cmovns cmovnz cmovo cmovp cmovpe cmovpo cmovs cmovz cmp cmpps cmps cmpsb cmpsd cmpss cmpsw cmpxchg cmpxchg8b comiss cpuid cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si cwd cwde
daa das dec div divps divss
emms enter esc
f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmov fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdiv fdivp fdivr fdivrp ffree fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fwait fxam fxch fxrstor fxsave fxtract fyl2x fyl2xp1
hlt
idiv imul in inc ins insb insd insw int int3 into invd invlpg iret iretd iretw
ja jae jb jbe jc jcxz je jecxz jg jge jl jle jmp jna jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz jo jp jpe jpo js jz
lahf lar ldmxcsr lds lea leave les lfs lgdt lgs lidt lldt lmsw lock lods lodsb lodsd lodsw loop loopd loope looped loopew loopne loopned loopnew loopnz loopnzd loopnzw loopw loopz loopzd loopzw lsl lss ltr
maskmovq maxps maxss minps minss mov movaps movd movhlps movhps movlhps movlps movmskps movntps movntq movq movs movsb movsd movss movsw movsx movups movzx msw mul mulps mulss
neg nop not
or orps out outs outsb outsd outsw
packssdw packsswb packuswb paddb paddd paddsb paddsw paddusb paddusw paddw pand pandn pause pavgb pavgw pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pextrw pinsrw pmaddwd pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw pmulhw pmullw pop popa popad popaw popd popf popfd popfw popw por prefetch psadbw pshufw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsw psubusb psubusw psubw punpckhbd punpckhbq punpckhbw punpckhdq punpckhwd punpcklbd punpcklbq punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushd pushf pushfd pushfw pushw pxor
rcl rcpps rcpss rcr rdmsr rdpmc rdtsc rep repe repne repnz repz ret retd retf retfd retfw retn retnd retnw retw rol ror rsm rsqrtps rsqrtss
sahf sal salc sar sbb scas scasb scasd scasw seta setae setb setbe setc sete setg setge setl setle setna setnae setnb setnbe setnc setne setng setnge setnl setnle setno setnp setns setnz seto setp setpe setpo sets setz sfence sgdt shl shld shr shrd shufps sidt sldt smsw sqrtps sqrtss stc std sti stmxcsr stos stosb stosd stosw str sub subps subss sysenter sysexit
test
ucomiss ud2 unpckhps unpcklps
verr verw
wait wbinvd wrmsr
xadd xchg xlat xlatb xor
/C2"Registers"
ah al ax
bh bl bp bx
ch cl cr0 cr2 cr3 cr4 cs cx
dh di dl dr0 dr1 dr2 dr3 dr6 dr7 ds dx
eax ebp ebx ecx edi edx es esi esp
fs
gs
mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7
si sp ss st0 st1 st2 st3 st4 st5 st6 st7
xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
/C3"Generic Assembler"
align
byte
code common
data db dd df dp dq dqword dt du dup dw dword
equ export extrn
far fword
import include
near
offset org
ptr public pword
qword
section seg segment stack
tbyte times tword
use16 use32 use64
word
/C4"Flat Assembler"
%t
.size
4.0
@f
any at
break
COFF
ccall char cinvoke cominvk console
defined discardable display dll
ELF ELF64
else end endm endp ends entry eq eqtype executable
file fix fixups format forward from
GUI
heap
if interface invoke irp irps
label load local
MS MS64 MZ
macro match mod
native notpageable
on
PE PE64
proc purge
RVA
rb rd readable repeat rept resource restore restruc reverse rf rp rq rt rw
shareable stdcall store struc struct
union used
virtual
while writeable
