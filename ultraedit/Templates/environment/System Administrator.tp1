<?xml version="1.0"?>
<Templates encode="utf8escenc"><Template Name="PS Domain List">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_NTDomain" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Client Site Name: " $objItem.ClientSiteName&#xD;
      write-host "Creation Class Name: " $objItem.CreationClassName&#xD;
      write-host "DC Site Name: " $objItem.DcSiteName&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "DNS Forest Name: " $objItem.DnsForestName&#xD;
      write-host "Domain Controller Address: " $objItem.DomainControllerAddress&#xD;
      write-host "Domain Controller Address Type: " $objItem.DomainControllerAddressType&#xD;
      write-host "Domain Controller Name: " $objItem.DomainControllerName&#xD;
      write-host "Domain GUID: " $objItem.DomainGuid&#xD;
      write-host "Domain Name: " $objItem.DomainName&#xD;
      write-host "DS Directory Service Flag: " $objItem.DSDirectoryServiceFlag&#xD;
      write-host "DS DNS Controller Flag: " $objItem.DSDnsControllerFlag&#xD;
      write-host "DS DNS Domain Flag: " $objItem.DSDnsDomainFlag&#xD;
      write-host "DS DNS Forest Flag: " $objItem.DSDnsForestFlag&#xD;
      write-host "DS Global Catalog Flag: " $objItem.DSGlobalCatalogFlag&#xD;
      write-host "DS Kerberos Distribution Center Flag: " $objItem.DSKerberosDistributionCenterFlag&#xD;
      write-host "DS Primary Domain Controller Flag: " $objItem.DSPrimaryDomainControllerFlag&#xD;
      write-host "DS Time Service Flag: " $objItem.DSTimeServiceFlag&#xD;
      write-host "DS Writable Flag: " $objItem.DSWritableFlag&#xD;
      write-host "Installation Date: " $objItem.InstallDate&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Name Format: " $objItem.NameFormat&#xD;
      write-host "Primary Owner Contact: " $objItem.PrimaryOwnerContact&#xD;
      write-host "Primary Owner Name: " $objItem.PrimaryOwnerName&#xD;
      write-host "Roles: " $objItem.Roles&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS Desktop Settings">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_Desktop" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Border Width: " $objItem.BorderWidth&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Cool Switch: " $objItem.CoolSwitch&#xD;
      write-host "Cursor Blink Rate: " $objItem.CursorBlinkRate&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Drag Full Windows: " $objItem.DragFullWindows&#xD;
      write-host "Grid Granularity: " $objItem.GridGranularity&#xD;
      write-host "Icon Spacing: " $objItem.IconSpacing&#xD;
      write-host "Icon Title Face Name: " $objItem.IconTitleFaceName&#xD;
      write-host "Icon Title Size: " $objItem.IconTitleSize&#xD;
      write-host "Icon Title Wrap: " $objItem.IconTitleWrap&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Pattern: " $objItem.Pattern&#xD;
      write-host "Screensaver Active: " $objItem.ScreenSaverActive&#xD;
      write-host "Screensaver Executable: " $objItem.ScreenSaverExecutable&#xD;
      write-host "Screensaver Secure: " $objItem.ScreenSaverSecure&#xD;
      write-host "Screensaver Timeout: " $objItem.ScreenSaverTimeout&#xD;
      write-host "Setting ID: " $objItem.SettingID&#xD;
      write-host "Wallpaper: " $objItem.Wallpaper&#xD;
      write-host "Wallpaper Stretched: " $objItem.WallpaperStretched&#xD;
      write-host "Wallpaper Tiled: " $objItem.WallpaperTiled&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS List Environ Vars">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_Environment" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "InstallationDate: " $objItem.InstallDate&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host "System Variable: " $objItem.SystemVariable&#xD;
      write-host "User Name: " $objItem.UserName&#xD;
      write-host "Variable Value: " $objItem.VariableValue&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS List Shortcuts">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_ShortcutFile" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Access Mask: " $objItem.AccessMask&#xD;
      write-host "Archive: " $objItem.Archive&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Compressed: " $objItem.Compressed&#xD;
      write-host "Compression Method: " $objItem.CompressionMethod&#xD;
      write-host "Creation Class Name: " $objItem.CreationClassName&#xD;
      write-host "Creation Date: " $objItem.CreationDate&#xD;
      write-host "CS Creation Class Name: " $objItem.CSCreationClassName&#xD;
      write-host "CS Name: " $objItem.CSName&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Drive: " $objItem.Drive&#xD;
      write-host "8.3 File Name: " $objItem.EightDotThreeFileName&#xD;
      write-host "Encrypted: " $objItem.Encrypted&#xD;
      write-host "Encryption Method: " $objItem.EncryptionMethod&#xD;
      write-host "Extension: " $objItem.Extension&#xD;
      write-host "File Name: " $objItem.FileName&#xD;
      write-host "File Size: " $objItem.FileSize&#xD;
      write-host "File Type: " $objItem.FileType&#xD;
      write-host "FS Creation Class Name: " $objItem.FSCreationClassName&#xD;
      write-host "FS Name: " $objItem.FSName&#xD;
      write-host "Hidden: " $objItem.Hidden&#xD;
      write-host "Installation Date: " $objItem.InstallDate&#xD;
      write-host "In Use Count: " $objItem.InUseCount&#xD;
      write-host "Last Accessed: " $objItem.LastAccessed&#xD;
      write-host "Last Modified: " $objItem.LastModified&#xD;
      write-host "Manufacturer: " $objItem.Manufacturer&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Path: " $objItem.Path&#xD;
      write-host "Readable: " $objItem.Readable&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host "System: " $objItem.System&#xD;
      write-host "Target: " $objItem.Target&#xD;
      write-host "Version: " $objItem.Version&#xD;
      write-host "Writeable: " $objItem.Writeable&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS Start Menu Groups">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_LogicalProgramGroup" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Group Name: " $objItem.GroupName&#xD;
      write-host "Installation Date: " $objItem.InstallDate&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host "User Name: " $objItem.UserName&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS Start Menu Items">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_LogicalProgramGroupItem" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "InstallationDate: " $objItem.InstallDate&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS List Startup Cmds">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_StartupCommand" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Command: " $objItem.Command&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Location: " $objItem.Location&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Setting ID: " $objItem.SettingID&#xD;
      write-host "User: " $objItem.User&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS List Recovery Cfg">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_OSRecoveryConfiguration" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Auto-Reboot: " $objItem.AutoReboot&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Debug File Path: " $objItem.DebugFilePath&#xD;
      write-host "Debug Information Type: " $objItem.DebugInfoType&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Expanded Debug File Path: " $objItem.ExpandedDebugFilePath&#xD;
      write-host "Expanded Mini-Dump Directory: " $objItem.ExpandedMiniDumpDirectory&#xD;
      write-host "Kernel-Dump Only: " $objItem.KernelDumpOnly&#xD;
      write-host "Mini-Dump Directory: " $objItem.MiniDumpDirectory&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Overwrite Existing Debug File: " $objItem.OverwriteExistingDebugFile&#xD;
      write-host "Send Administrator Alert: " $objItem.SendAdminAlert&#xD;
      write-host "Setting ID: " $objItem.SettingID&#xD;
      write-host "Write Debug Information: " $objItem.WriteDebugInfo&#xD;
      write-host "Write To System Log: " $objItem.WriteToSystemLog&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS List Boot Config">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_BootConfiguration" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Boot Directory: " $objItem.BootDirectory&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Configuration Path: " $objItem.ConfigurationPath&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Last Drive: " $objItem.LastDrive&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Scratch Directory: " $objItem.ScratchDirectory&#xD;
      write-host "Setting ID: " $objItem.SettingID&#xD;
      write-host "Temporary Directory: " $objItem.TempDirectory&#xD;
      write-host&#xD;
}</Template><Template Name="PS List Logon Info">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_LogonSession" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Authentication Package: " $objItem.AuthenticationPackage&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Installation Date: " $objItem.InstallDate&#xD;
      write-host "Logon ID: " $objItem.LogonId&#xD;
      write-host "Logon Type: " $objItem.LogonType&#xD;
      write-host "Name: " $objItem.Name&#xD;
      write-host "Start Time: " $objItem.StartTime&#xD;
      write-host "Status: " $objItem.Status&#xD;
      write-host&#xD;
}&#xD;
</Template><Template Name="PS Prod Activ Status">$strComputer = "."&#xD;
&#xD;
$colItems = get-wmiobject -class "Win32_WindowsProductActivation" -namespace "root\CIMV2" `&#xD;
-computername $strComputer&#xD;
&#xD;
foreach ($objItem in $colItems) {&#xD;
      write-host "Activation Required: " $objItem.ActivationRequired&#xD;
      write-host "Caption: " $objItem.Caption&#xD;
      write-host "Description: " $objItem.Description&#xD;
      write-host "Is Notification On: " $objItem.IsNotificationOn&#xD;
      write-host "Product ID: " $objItem.ProductID&#xD;
      write-host "Remaining Evaluation Period: " $objItem.RemainingEvaluationPeriod&#xD;
      write-host "Remaining Grace Period: " $objItem.RemainingGracePeriod&#xD;
      write-host "Server Name: " $objItem.ServerName&#xD;
      write-host "Setting ID: " $objItem.SettingID&#xD;
      write-host&#xD;
}&#xD;
</Template></Templates>
